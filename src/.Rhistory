if (countyData[i,1] == "Texas") {
countyData$StayHomeDate[i] = "2020-04-02"
}
if (countyData[i,1] == "Louisiana") {
countyData$StayHomeDate[i] = "2020-03-23"
}
}
write.csv(countyData,"./data/countyData.csv")
library(xtable)
table(countyData$StayHomeDate)
table(countyData$State)
hist(as.numeric(as.POSIXct(countyData$StayHomeDate)) ,col = 'blue', main = "Stay Homer Order Announced", xlab = "Unix Timestamp, left is earlier, right is later")
hist(log(countyData$Income.2018), main = "Log Income per County", xlab = "Median Income")
hist(log(countyData$Beds), main = "Log of Hospital Beds per")
hist((log(countyData$totalDeaths+.1)\countyData$Pop.2019), main="Distribution of log(Deaths)",
countyPop
countyData$Pop.2019
countyData = countyData[complete.cases(countyData),]
countyData$Pop.2019
deathRatio
deathRatio = (countyData$totalDeaths / countyData$Pop.2019)
deathRatio
hist(deathRatio)
hist(deathRatio^2)
hist(deathRatio^4)
deathRatio
deathRatio = (countyData$totalDeaths / log(countyData$Pop.2019))
deathRatio
deathRatio
hist(deathRatio^2)
hist(deathRatio)
table(ddeathRatio)
table(deathRatio)
deathRatio = (countyData$totalDeaths / countyData$Pop.2019)
1208.11311783286
deathRatio
table(deathRatio)
hist(deathRatio*10^5)
hist(deathRatio*10^5)
hist(deathRatio*10^3)
hist(deathRatio < .1)
deathRatio = deathRatio<.1
hist(deathRatio)
countyData = countyData[complete.cases(countyData),]
deathRatio = (countyData$totalDeaths / countyData$Pop.2019)
1208.11311783286
deathRatio
table(deathRatio)
id = which(deathRatio < .)
id = which(deathRatio < .001)
deathesClean[id,]
deathRatio[id,]
deathRatio<- deathRatio[which(deathRatio <= .001),]
deathRatio<- deathRatio[which(deathRatio <= .001)]
deathRatio
hist(deathRatio)
knitr::opts_chunk$set(echo = TRUE)
newdata<-countyData[,c("deathRatio", "caseRatio", "Income.2018","Beds","StayHomeDate","Pop.2019","popDens")]
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
countyData = read.csv("./data/countyData.csv")
countyData$deathRatio<-(countyData$totalDeaths)/(countyData$Pop.2019)
countyData$caseRatio<-(countyData$totalCases)/(countyData$Pop.2019)
countyData<-countyData[which(!is.na(countyData$Beds)),]
countyData<-countyData[which(!is.na(countyData$Income.2018)),]
newdata<-countyData[,c("deathRatio", "caseRatio", "Income.2018","Beds","StayHomeDate","Pop.2019","popDens")]
par(mfrow=c(2,2))
newdata$StayHomeDate =as.numeric(as.POSIXct(newdata$StayHomeDate))
hist(newdata$deathRatio)
hist(newdata$caseRatio)
hist(newdata$Income.2018)
hist(newdata$Beds)
hist(newdata$StayHomeDate)
hist(newdata$Pop.2019)
hist(newdata$popDens)
boxplot(newdata$log.deathRatio~newdata$date,xlab="Date",ylab="log(deathRatio)")
library(data.table)
countyData = read.csv("./data/countyData.csv")
countyData$deathRatio<-(countyData$totalDeaths)/(countyData$Pop.2019)
countyData$caseRatio<-(countyData$totalCases)/(countyData$Pop.2019)
countyData<-countyData[which(!is.na(countyData$Beds)),]
countyData<-countyData[which(!is.na(countyData$Income.2018)),]
newdata<-countyData[,c("deathRatio", "caseRatio", "Income.2018","Beds","StayHomeDate","Pop.2019","popDens")]
library(data.table)
countyData = read.csv("./data/countyData.csv")
countyData$deathRatio<-(countyData$totalDeaths)/(countyData$Pop.2019)
countyData$caseRatio<-(countyData$totalCases)/(countyData$Pop.2019)
countyData<-countyData[which(!is.na(countyData$Beds)),]
countyData<-countyData[which(!is.na(countyData$Income.2018)),]
newdata<-countyData[,c("deathRatio", "caseRatio", "Income.2018","Beds","StayHomeDate","Pop.2019","popDens")]
There are a small number of observations for which there are not Beds or Income measurements; those are discarded. For sake of continuity, we code date as an ordered categrical variable in the form of serial date. Examining the histograms of the variables, we see that every single one except for date displays strong right skew, which suggests a logarithmic transform for each of them. Note that the +0.00001 is added to include measurements of 0, since log(0) is undefined.
```{r}
par(mfrow=c(2,2))
newdata$StayHomeDate =as.numeric(as.POSIXct(newdata$StayHomeDate))K
hist(newdata$deathRatio)
hist(newdata$caseRatio)
hist(newdata$deathRatio)
newdata$StayHomeDate =as.numeric(as.POSIXct(newdata$StayHomeDate))K
newdata$StayHomeDate = as.numeric(as.POSIXct(newdata$StayHomeDate))
newdata$log.deathRatio<-log(newdata$deathRatio+.00001)
newdata$StayHomeDate = as.numeric(as.POSIXct(newdata$StayHomeDate))
newdata$StayHomeDate = as.numeric(as.POSIXct(newdata$StayHomeDate))
newdata$StayHomeDate = as.numeric(as.POSIXct(newdata$StayHomeDate))
newdata$StayHomeDate = as.numeric(as.POSIXct(newdata$StayHomeDate))
as.numeric(as.POSIXct(newdata$StayHomeDate))
numberDate = as.numeric(as.POSIXct(newdata$StayHomeDate))
numberDate = as.numeric(as.POSIXct(countyData$StayHomeDate))
countyData<-countyData[which(!is.na(countyData$Income.2018)),]
newdata<-countyData[,c("deathRatio", "caseRatio", "Income.2018","Beds","StayHomeDate","Pop.2019","popDens")]
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
countyData = read.csv("./data/countyData.csv")
countyData$deathRatio<-(countyData$totalDeaths)/(countyData$Pop.2019)
countyData$caseRatio<-(countyData$totalCases)/(countyData$Pop.2019)
countyData<-countyData[which(!is.na(countyData$Beds)),]
countyData<-countyData[which(!is.na(countyData$Income.2018)),]
newdata<-countyData[,c("deathRatio", "caseRatio", "Income.2018","Beds","StayHomeDate","Pop.2019","popDens")]
numberDate = as.numeric(as.POSIXct(newData$StayHomeDate))
numberDate = as.numeric(as.POSIXct(newdata$StayHomeDate))
hist(newdata$StayHomeDate)
newdata$StayHomeDate = as.numeric(as.POSIXct(newdata$StayHomeDate))
hist(newdata$deathRatio)
hist(newdata$caseRatio)
hist(newdata$Income.2018)
hist(newdata$Beds)
hist(newdata$StayHomeDate)
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
countyData = read.csv("./data/countyData.csv")
countyData$deathRatio<-(countyData$totalDeaths)/(countyData$Pop.2019)
countyData$caseRatio<-(countyData$totalCases)/(countyData$Pop.2019)
countyData<-countyData[which(!is.na(countyData$Beds)),]
countyData<-countyData[which(!is.na(countyData$Income.2018)),]
newdata<-countyData[,c("deathRatio", "caseRatio", "Income.2018","Beds","StayHomeDate","Pop.2019","popDens")]
newdata$date<-as.numeric(as.Date(newdata$StayHomeDate))
newdata$log.Beds<-log(newdata$Beds)
newdata$log.deathRatio<-log(newdata$deathRatio+.00001)
newdata$log.caseRatio<-log(newdata$caseRatio+0.00001)
newdata$log.pop<-log(newdata$Pop.2019+0.00001)
newdata$log.popDens<-log(newdata$popDens)
newdata$log.Income<-log(newdata$Income.2018)
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
countyData = read.csv("./data/countyData.csv")
countyData$deathRatio<-(countyData$totalDeaths)/(countyData$Pop.2019)
countyData$caseRatio<-(countyData$totalCases)/(countyData$Pop.2019)
countyData<-countyData[which(!is.na(countyData$Beds)),]
countyData<-countyData[which(!is.na(countyData$Income.2018)),]
newdata<-countyData[,c("deathRatio", "caseRatio", "Income.2018","Beds","StayHomeDate","Pop.2019","popDens")]
hist(as.numeric(as.date(newdata$StayHomeDate)))
hist(as.numeric(as.date(newdata$StayHomeDate)))
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
countyData = read.csv("./data/countyData.csv")
countyData$deathRatio<-(countyData$totalDeaths)/(countyData$Pop.2019)
countyData$caseRatio<-(countyData$totalCases)/(countyData$Pop.2019)
countyData<-countyData[which(!is.na(countyData$Beds)),]
countyData<-countyData[which(!is.na(countyData$Income.2018)),]
newdata<-countyData[,c("deathRatio", "caseRatio", "Income.2018","Beds","StayHomeDate","Pop.2019","popDens")]
hist(as.numeric(as.Date(newdata$StayHomeDate)
library(data.table)
hist(as.numeric(as.Date(newdata$StayHomeDate)))
source("./dependencies/panelfxns.R")
vars<-with(newdata, cbind(log.deathRatio,log.caseRatio,log.Income,log.Beds,date,log.pop,log.popDens))
source("./dependencies/panelfxns.R")
vars<-with(newdata, cbind(log.deathRatio,log.caseRatio,log.Income,log.Beds,date,log.pop,log.popDens))
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
countyData = read.csv("./data/countyData.csv")
countyData$deathRatio<-(countyData$totalDeaths)/(countyData$Pop.2019)
countyData$caseRatio<-(countyData$totalCases)/(countyData$Pop.2019)
countyData<-countyData[which(!is.na(countyData$Beds)),]
countyData<-countyData[which(!is.na(countyData$Income.2018)),]
newdata<-countyData[,c("deathRatio", "caseRatio", "Income.2018","Beds","StayHomeDate","Pop.2019","popDens")]
par(mfrow=c(2,2))
hist(newdata$deathRatio)
hist(newdata$caseRatio)
hist(newdata$Income.2018)
hist(newdata$Beds)
hist(as.numeric(as.Date(newdata$StayHomeDate)))
hist(newdata$Pop.2019)
hist(newdata$popDens)
boxplot(newdata$log.deathRatio~newdata$date,xlab="Date",ylab="log(deathRatio)")
vars<-with(newdata, cbind(log.deathRatio,log.caseRatio,log.Income,log.Beds,date,log.pop,log.popDens))
newdata$log.deathRatio<-log(newdata$deathRatio+.00001)
vars<-with(newdata, cbind(log.deathRatio,log.caseRatio,log.Income,log.Beds,date,log.pop,log.popDens))
vars<-with(newdata, cbind(log.deathRatio,log.caseRatio,log.Income,log.Beds,date,log.pop,log.popDens))
newdata$log.caseRatio<-log(newdata$caseRatio+0.00001)
vars<-with(newdata, cbind(log.deathRatio,log.caseRatio,log.Income,log.Beds,date,log.pop,log.popDens))
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
countyData = read.csv("./data/countyData.csv")
countyData$deathRatio<-(countyData$totalDeaths)/(countyData$Pop.2019)
countyData$caseRatio<-(countyData$totalCases)/(countyData$Pop.2019)
countyData<-countyData[which(!is.na(countyData$Beds)),]
countyData<-countyData[which(!is.na(countyData$Income.2018)),]
newdata<-countyData[,c("deathRatio", "caseRatio", "Income.2018","Beds","StayHomeDate","Pop.2019","popDens")]
par(mfrow=c(2,2))
hist(newdata$deathRatio)
hist(newdata$caseRatio)
hist(newdata$Income.2018)
hist(newdata$Beds)
hist(as.numeric(as.Date(newdata$StayHomeDate)))
hist(newdata$Pop.2019)
hist(newdata$popDens)
boxplot(newdata$log.deathRatio~newdata$date,xlab="Date",ylab="log(deathRatio)")
vars<-with(newdata, cbind(log.deathRatio,log.caseRatio,log.Income,log.Beds,date,log.pop,log.popDens))
(newdata$log.deathRatio~newdata$date,xlab="Date",ylab="log(deathRatio)")
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
countyData = read.csv("./data/countyData.csv")
countyData$deathRatio<-(countyData$totalDeaths)/(countyData$Pop.2019)
countyData$caseRatio<-(countyData$totalCases)/(countyData$Pop.2019)
countyData<-countyData[which(!is.na(countyData$Beds)),]
countyData<-countyData[which(!is.na(countyData$Income.2018)),]
newdata<-countyData[,c("deathRatio", "caseRatio", "Income.2018","Beds","StayHomeDate","Pop.2019","popDens")]
par(mfrow=c(2,2))
hist(newdata$deathRatio)
hist(newdata$caseRatio)
hist(newdata$Income.2018)
hist(newdata$Beds)
hist(as.numeric(as.Date(newdata$StayHomeDate)))
hist(newdata$Pop.2019)
hist(newdata$popDens)
#Logging variables
newdata$Income<-as.numeric(newdata$Income)
newdata$date<-as.numeric(as.Date(newdata$StayHomeDate))
newdata$log.Beds<-log(newdata$Beds)
newdata$log.deathRatio<-log(newdata$deathRatio+.00001)
newdata$log.caseRatio<-log(newdata$caseRatio+0.00001)
newdata$log.pop<-log(newdata$Pop.2019+0.00001)
newdata$log.popDens<-log(newdata$popDens)
newdata$log.Income<-log(newdata$Income.2018)
boxplot(newdata$log.deathRatio~newdata$date,xlab="Date",ylab="log(deathRatio)")
vars<-with(newdata, cbind(log.deathRatio,log.caseRatio,log.Income,log.Beds,date,log.pop,log.popDens))
source("./dependencies/panelfxns.R")
pairs(vars,lower.panel=panel.cor)
lm.init<-lm(log.deathRatio~log.caseRatio+log.Income+log.Beds+date+log.pop+log.popDens+log.popDens*log.caseRatio, data=newdata)
summary(lm.init)
par(mfrow=c(2,2))
plot(lm.init$residuals~lm.final$fitted.values, xlab = "Fitted Values", ylab="Residuals")
lm.final<-lm(log.deathRatio~log.caseRatio+date+log.pop+log.popDens+log.popDens*log.caseRatio, data=newdata)
plot(lm.init$residuals~lm.final$fitted.values, xlab = "Fitted Values", ylab="Residuals")
qqnorm(lm.init$residuals)
lm.final<-lm(log.deathRatio~log.caseRatio+date+log.pop+log.popDens+log.popDens*log.caseRatio, data=newdata)
summary(lm.final)
par(mfrow=c(2,2))
plot(lm.final$residuals~lm.final$fitted.values, xlab = "Fitted Values", ylab="Residuals")
qqnorm(lm.final$residuals)
# top top 10 states: NY, NJ, MA, IL, CA, PA, MI, FL, LA, TX
# change formula for deaths/county pop
library(data.table)
confirmedCasesUS = fread('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv')
confirmedDeathsUS = fread('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv')
hospitalData = read.csv('data/Hospitals.csv', header = TRUE)
mobilityReport = fread('https://www.gstatic.com/covid19/mobility/Global_Mobility_Report.csv')
stayHomeClean = read.csv('data/StayHomeOrder.csv', header = TRUE)
countyPop = read.csv('data/countyPop.csv', header = TRUE)
popDensity = fread('https://raw.githubusercontent.com/camillol/cs424p3/master/data/Population-Density%20By%20County.csv')
head(confirmedCasesUS)
head(confirmedDeathsUS)
head(stayHomeClean)
head(countyPop)
hospitalData
library(tidyverse)
#Confirmed Cases
casesClean = confirmedCasesUS[,-2:-5]
casesClean = casesClean[,-7]
names(casesClean)[names(casesClean) == "Admin2"] <- "County"
#Confirmed Deaths
deathesClean = confirmedDeathsUS[,-2:-5]
deathesClean = deathesClean[,-7]
names(deathesClean)[names(deathesClean) == "Admin2"] <- "County"
#Hospital Data
hospitalClean = hospitalData %>% filter(
TYPE == "GENERAL ACUTE CARE" | TYPE == "LONG TERM CARE"|
TYPE == "CRITICAL ACCESS" | TYPE == "CHILDREN")
# we want to anonymize the name of the hospital and remove lat/longitude data, and other id and columns where all the values are the same. We have also removed hospitals that would not be treating people who are infected with the virus.
head(hospitalData)
hospitalClean = hospitalData[,-c(1:6, 10:11, 16, 17, 20, 22:29,31,34)]
hospitalClean
rapply(hospitalData,function(x)length(unique(x)))
types = hospitalData$TYPE[!duplicated(hospitalData$TYPE)]
#Filtering out the regions that are not the United States, each row is a day where the columns represent the %change  from baseline in different categories such as retail, transit, parks, etc...
# When both sub_region_1 and sub_region_2 is empty then we are looking at the whole US
# When sub_region_2 is empty we are looking at the statewide mobility report, I am keeping these in for future use cases.
mobilityReportClean = mobilityReport[which(mobilityReport$country_region=='United States')]
head(casesClean)
head(deathesClean)
head(hospitalClean)
mobilityReportClean
head(stayHomeClean)
# Need to translate StayHome date into a category "bucket"
# Group 1: Orders on/before 3/23
# Group 2: Orders between 3/24 - 3/26
# Group 3: Orders between 3/27 - 3/31
# Group 4: Orders on/after 4/1
stayHomeClean$Start.Date = as.Date(stayHomeClean$Start.Date)
#Creating Dummy Variables for each group
stayHomeClean$start.1 = ifelse(stayHomeClean$Start.Date <= as.Date('2020-03-23'),1,0)
stayHomeClean$start.2 = ifelse(stayHomeClean$Start.Date > as.Date('2020-03-23') & stayHomeClean$Start.Date <= as.Date('2020-03-26') ,1,0)
stayHomeClean$start.3 = ifelse(stayHomeClean$Start.Date > as.Date('2020-03-26') & stayHomeClean$Start.Date <= as.Date('2020-03-31'),1,0)
stayHomeClean$start.4 = ifelse(stayHomeClean$Start.Date >= as.Date('2020-04-01'),1,0)
# Adding data set for per capital income 2018 for each county
incomeData = read.csv('data/lapi1119.csv',header = TRUE )
typeof(incomeData)
#Create a unified "countyData" table which will link each county to:
# mortality rate, total cases, total deaths, # beds, ∆retail, ∆grocery, ∆parks, ∆transit, ∆work, ∆residential, stay at home, income
#Subsetting data for only counties in top 10 states
topStates = c("New York","New Jersey","Massachusetts","Illinois","California","Pennsylvania", "Michigan", "Florida","Louisiana", "Texas")
#Income
incomeDataClean = subset(incomeData, ï..State %in% topStates )
names(incomeDataClean) = c("State","County","Income.2018")
incomeDataClean = transform(incomeDataClean, Income.2018 = as.integer(gsub(",","",Income.2018)))
incomeDataClean
#Cases - only as of 4/26/2020
casesSub = subset(casesClean, (Province_State %in% topStates) & UID <84060000)
casesSub$totalCases = casesSub$"4/26/20"
casesSub = casesSub[,c("County","Province_State","totalCases")]
casesSub = casesSub[,c(2,1,3)]
names(casesSub) = c("State","County","totalCases")
#Deaths - only as of 4/26/2020
deathsSub = subset(deathesClean, (Province_State %in% topStates) & UID <84060000)
deathsSub$totalDeaths = deathsSub$"4/26/20"
deathsSub = deathsSub[,c("County","Province_State","totalDeaths")]
deathsSub = deathsSub[,c(2,1,3)]
names(deathsSub) = c("State","County","totalDeaths")
deathsSub
#Population - 2019 estimates
populationSub = subset(countyPop, STNAME %in% topStates & as.character(STNAME)!=as.character(CTYNAME))
populationSub = populationSub[,c("STNAME","CTYNAME","POPESTIMATE2019")]
names(populationSub) = c("State","County","Pop.2019")
populationSub$County = sub(populationSub$County, pattern = " [[:alpha:]]*$", replacement = "")
#Density per square mile of land area
popDensity = popDensity[,c(3,6,7)]
names(popDensity) = c("State","County","popDens")
popDensity = subset(popDensity,(State %in% topStates))
popDensity$County = sub(popDensity$County,pattern = " [[:alpha:]]*$", replacement = "")
#Hospital
library(tools)
hospitalSub = subset(hospitalClean,STATE %in% c("CA","NY","NJ","MA","LA","TX","MI","IL","FL","PA"))
hospitalSub = hospitalSub[,c("STATE","COUNTY","BEDS")]
hospitalSub = hospitalSub[hospitalSub$BEDS!=-999,]
aggregateBeds = data.frame(aggregate(BEDS~COUNTY+STATE,hospitalSub,sum))
aggregateBeds = aggregateBeds[c(2,1,3)]
aggregateBeds$STATE = as.character(aggregateBeds$STATE )
aggregateBeds$COUNTY = toTitleCase(tolower(as.character(aggregateBeds$COUNTY )))
for (i in 1:nrow(aggregateBeds)){
if (as.character(aggregateBeds[i,1]) == "CA"){
aggregateBeds[i,1] = "California"
}
if (as.character(aggregateBeds[i,1]) == "NJ"){
aggregateBeds[i,1] = "New Jersey"
}
if (as.character(aggregateBeds[i,1]) == "NY"){
aggregateBeds[i,1] = "New York"
}
if (as.character(aggregateBeds[i,1]) == "MA"){
aggregateBeds[i,1] = "Massachusetts"
}
if (as.character(aggregateBeds[i,1]) == "PA"){
aggregateBeds[i,1] = "Pennsylvania"
}
if (as.character(aggregateBeds[i,1]) == "MI"){
aggregateBeds[i,1] = "Michigan"
}
if (as.character(aggregateBeds[i,1]) == "IL"){
aggregateBeds[i,1] = "Illinois"
}
if (as.character(aggregateBeds[i,1]) == "LA"){
aggregateBeds[i,1] = "Louisiana"
}
if (as.character(aggregateBeds[i,1]) == "FL"){
aggregateBeds[i,1] = "Florida"
}
if (as.character(aggregateBeds[i,1]) == "TX"){
aggregateBeds[i,1] = "Texas"
}
}
names(aggregateBeds) = c("State","County","Beds")
countyData = merge(deathsSub,casesSub)
countyData = merge(countyData,incomeDataClean,all = TRUE)
countyData = merge(countyData,aggregateBeds,all=TRUE)
countyData = merge(countyData,populationSub)
countyData = merge(countyData,popDensity,all=TRUE)
countyData$StayHomeDate = as.character("2020-01-01")
for (i in 1:nrow(countyData)){
if (countyData[i,1] == "California") {
countyData$StayHomeDate[i] = "2020-03-19"
}
if (countyData[i,1] == "New Jersey") {
countyData$StayHomeDate[i] = "2020-03-21"
}
if (countyData[i,1] == "New York") {
countyData$StayHomeDate[i] = "2020-03-22"
}
if (countyData[i,1] == "Massachusetts") {
countyData$StayHomeDate[i] = "2020-03-24"
}
if (countyData[i,1] == "Illinois") {
countyData$StayHomeDate[i] = "2020-03-21"
}
if (countyData[i,1] == "Pennsylvania") {
countyData$StayHomeDate[i] = "2020-04-01"
}
if (countyData[i,1] == "Michigan") {
countyData$StayHomeDate[i] = "2020-03-24"
}
if (countyData[i,1] == "Florida") {
countyData$StayHomeDate[i] = "2020-04-03"
}
if (countyData[i,1] == "Texas") {
countyData$StayHomeDate[i] = "2020-04-02"
}
if (countyData[i,1] == "Louisiana") {
countyData$StayHomeDate[i] = "2020-03-23"
}
}
write.csv(countyData,"./data/countyData.csv")
lm.final<-lm(log.deathRatio~log.caseRatio+date+log.popDens+log.popDens*log.caseRatio, data=newdata)
lm.final<-lm(log.deathRatio~log.caseRatio+date+log.popDens+log.popDens*log.caseRatio, data=newdata)
summary(lm.final)
+log.pop
+log.pop
lm.final<-lm(log.deathRatio~log.caseRatio+date+log.pop+log.popDens+log.popDens*log.caseRatio, data=newdata)
summary(lm.final)
par(mfrow=c(2,2))
plot(lm.final$residuals~lm.final$fitted.values, xlab = "Fitted Values", ylab="Residuals")
qqnorm(lm.final$residuals)
lm.final<-lm(log.deathRatio~log.caseRatio+date+log.pop+log.popDens+log.income +log.popDens*log.caseRatio, data=newdata)
lm.init<-lm(log.deathRatio~log.caseRatio+log.Income+log.Beds+date+log.pop+log.popDens+log.popDens*log.caseRatio, data=newdata)
summary(lm.init)
knitr::opts_chunk$set(echo = TRUE)
plot(log(countyData$totalDeaths+0.1)~log(countyData$totalCases+0.1),
main="log(deaths) vs. log(cases)",xlab="log(Total Cases)",ylab="log(Total Deaths)")
cor(log(countyData$totalDeaths+0.1),log(countyData$totalCases+0.1))
cor(log(countyData$totalDeaths+0.1),log(countyData$totalCases+0.1))
plot(log(countyData$totalDeaths+0.1)~log(countyData$totalCases+0.1),
main="log(deaths) vs. log(cases)",xlab="log(Total Cases)",ylab="log(Total Deaths)")
hist((log(countyData$totalDeaths+.1)\coun), main="Distribution of log(Deaths)",
#Logging variables
newdata$Income<-as.numeric(newdata$Income)
#Logging variables
newdata$Income<-log((newdata$Income))
hist(newdata$Income)
hist(newData$log.Beds)
hist(newdata$log.Beds)
hist(newdata$deathRatio)
hist(newdata$log.deathRatio)
hist(newdata$log.caseRatio)
hist(newdata$log.pop)
hist(newdata$log.popDens)
hist(newdata$log.Income)
hist(newdata$log.Income, main = "Log of Income", col = 'forestgreen')
hist(newdata$log.Beds, main = "Log(Bed num)", col = "red")
hist(newdata$log.Beds, main = "Log(Bed num)", col = "red", xlab = " hospital capacity through number of beds")
hist(newdata$log.deathRatio, main = "Log(death ratio)", xlab= "Number of Deaths per Capita",col = "yellow")
newdata$log.deathRatio<-log(newdata$deathRatio+1)
hist(newdata$log.deathRatio, main = "Log(death ratio)", xlab= "Number of Deaths per Capita",col = "yellow")
newdata$log.deathRatio<-log(newdata$deathRatio+0.001)
hist(newdata$log.deathRatio, main = "Log(death ratio)", xlab= "Number of Deaths per Capita",col = "yellow")
newdata$log.caseRatio<-log(newdata$caseRatio+2)
hist(newdata$log.deathRatio, main = "Log(death ratio)", xlab= "Number of Deaths per Capita",col = "yellow")
newdata$log.deathRatio<-log(newdata$deathRatio+2)
hist(newdata$log.deathRatio, main = "Log(death ratio)", xlab= "Number of Deaths per Capita",col = "yellow")
newdata$log.deathRatio<-log(newdata$deathRatio+10)
hist(newdata$log.deathRatio, main = "Log(death ratio)", xlab= "Number of Deaths per Capita",col = "yellow")
newdata$log.deathRatio<-log(newdata$deathRatio+0.00001)
hist(newdata$log.deathRatio, main = "Log(death ratio)", xlab= "Number of Deaths per Capita",col = "yellow")
par(mfrow = c(2,4))
hist(newdata$log.Income, main = "Log(Personal Income)", col = 'forestgreen')
hist(newdata$log.Beds, main = "Log(Bed num)", col = "red", xlab = " Hospital capacity through number of beds")
hist(newdata$log.caseRatio, main = "Log(case ratio)", xlab = "Cases per capita", col = "celurean")
hist(newdata$log.caseRatio, main = "Log(case ratio)", xlab = "Cases per capita", col = "blue")
newdata$log.caseRatio<-log(newdata$caseRatio+0.00001)
hist(newdata$log.caseRatio, main = "Log(case ratio)", xlab = "Cases per capita", col = "blue")
hist(newdata$log.pop, main = "Log(population)", xlab= "Population per county", col = "orange")
hist(newdata$log.popDens, main = "Log(population density)", xlab = "population/sq. feet", col = "brown")
par(mfrow = c(2,3))
hist(newdata$log.Income, main = "Log(Personal Income)", col = 'forestgreen')
hist(newdata$log.Beds, main = "Log(Bed num)", col = "red", xlab = " Hospital capacity through number of beds")
hist(newdata$log.deathRatio, main = "Log(death ratio)", xlab= "Deaths per capita",col = "yellow")
hist(newdata$log.caseRatio, main = "Log(case ratio)", xlab = "Cases per capita", col = "blue")
hist(newdata$log.pop, main = "Log(population)", xlab= "Population per county", col = "orange")
hist(newdata$log.popDens, main = "Log(pop. density)", xlab = "pop/sq. feet", col = "brown")
pairs(vars,lower.panel=panel.cor)
hist(newdata$StayHomeDate)
hist(as.numeric(newdata$StayHomeDate))
hist(as.numeric(as.Date(newdata$StayHomeDate)))
hist(as.numeric(as.Date(newdata$StayHomeDate)), main ="Stay Home Order Announced", xlab ="", col = "teal")
par(mfrow = c(2,4))
hist(newdata$log.Income, main = "Log(Personal Income)", col = 'forestgreen')
hist(newdata$log.Beds, main = "Log(Bed num)", col = "red", xlab = " Hospital capacity through number of beds")
hist(newdata$log.deathRatio, main = "Log(death ratio)", xlab= "Deaths per capita",col = "yellow")
hist(newdata$log.caseRatio, main = "Log(case ratio)", xlab = "Cases per capita", col = "blue")
hist(newdata$log.pop, main = "Log(population)", xlab= "Population per county", col = "orange")
hist(newdata$log.popDens, main = "Log(pop. density)", xlab = "pop/sq. feet", col = "brown")
hist(as.numeric(as.Date(newdata$StayHomeDate)), main ="Stay Home Order Announced", xlab ="", col = "teal")
hist(as.numeric(as.Date(newdata$StayHomeDate)), main ="Stay Home Order Announced", xlab ="", col = "black")
hist(as.numeric(as.Date(newdata$StayHomeDate)), main ="Stay Home Order Announced", xlab ="", col = "red")
table(newdata$stayHomeDate)
table(as.Date(newdata$stayHomeDate))
table(newdata$stayHomeDate)
xtable(newdata$stayHomeDate)
library(table)
library(xtable)
table(newdata$stayHomeDate)
table(newdata)
table(newdata$StayHomeDate)
hist(as.numeric(as.Date(newdata$StayHomeDate)), main ="Stay Home Order Announced", xlab ="", col = "red")
hist(as.numeric(as.Date(newdata$StayHomeDate)), main ="Stay Home Order Announced", xlab ="Date as a number", col = "red")
table(newdata$StayHomeDate)
